[
    {
        "id": "18243aa4f20abaa8",
        "type": "tab",
        "label": "Home",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6ad5b9fd60cc0a30",
        "type": "tab",
        "label": "InfluxDB Write",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c447761f81aaafa4",
        "type": "tab",
        "label": "Graphing",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "456e81617a2b6cd0",
        "type": "tab",
        "label": "Control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7e05ac45fab33178",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "modbus",
        "tcpPort": "5020",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "699e1f9cdc62f62b",
        "type": "ui_tab",
        "name": "Graphing",
        "icon": "show_chart",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "445e0e1d8ca630df",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0082c8",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#0082c8",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0082c8",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0082c8",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#15adff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0082c8",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "KOD-modbus-app",
            "hideToolbar": "false",
            "allowSwipe": "mouse",
            "lockMenu": "true",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "251b81ee7792cb7d",
        "type": "ui_tab",
        "name": "Control",
        "icon": "keyboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "06600b2f320e273d",
        "type": "ui_group",
        "name": "Coils",
        "tab": "251b81ee7792cb7d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d580ed5a6fa4fd05",
        "type": "Stackhero-InfluxDB-v2-Server",
        "name": "kod-modbus-data-bucket",
        "host": "influxdb",
        "port": "8086",
        "tls": false
    },
    {
        "id": "2a7b81d0073f7e56",
        "type": "ui_group",
        "name": "Graphs",
        "tab": "699e1f9cdc62f62b",
        "order": 3,
        "disp": true,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "86228.687a5dd88",
        "type": "ui_group",
        "name": "Welcome!",
        "tab": "e006699.f40dd98",
        "order": 1,
        "disp": false,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e006699.f40dd98",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": true
    },
    {
        "id": "579a5e58c9ab45fc",
        "type": "ui_group",
        "name": "Real-time Values",
        "tab": "699e1f9cdc62f62b",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1e3045778b6b8a01",
        "type": "ui_group",
        "name": "Get Started...",
        "tab": "e006699.f40dd98",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a95b4ea959a4e186",
        "type": "ui_button",
        "z": "18243aa4f20abaa8",
        "name": "",
        "group": "86228.687a5dd88",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Show me Graphs!",
        "tooltip": "",
        "color": "",
        "bgcolor": "rgb(0,130,200)",
        "className": "",
        "icon": "",
        "payload": "Graphing",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "4094b70f2b543e99"
            ]
        ]
    },
    {
        "id": "4094b70f2b543e99",
        "type": "ui_ui_control",
        "z": "18243aa4f20abaa8",
        "name": "",
        "events": "change",
        "x": 540,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "9eaea93861bf2274",
        "type": "ui_text",
        "z": "18243aa4f20abaa8",
        "group": "86228.687a5dd88",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "welcome",
        "label": "",
        "format": "Welcome to the app! use the menu bar on the left left or press a button to start using the app",
        "layout": "row-left",
        "className": "",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "f84c35a6f46c9c3a",
        "type": "ui_button",
        "z": "18243aa4f20abaa8",
        "name": "",
        "group": "86228.687a5dd88",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Control the Device",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Control",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 220,
        "wires": [
            [
                "4094b70f2b543e99"
            ]
        ]
    },
    {
        "id": "1659d256287e7473",
        "type": "ui_media",
        "z": "18243aa4f20abaa8",
        "group": "86228.687a5dd88",
        "name": "",
        "width": "10",
        "height": "5",
        "order": 1,
        "category": "logo",
        "file": "KONCAR-DIGITAL-logo.jpg",
        "layout": "adjust",
        "showcontrols": false,
        "loop": false,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 610,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "1063b8cb5ccf7b16",
        "type": "ui_text",
        "z": "18243aa4f20abaa8",
        "group": "86228.687a5dd88",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "get started",
        "label": "",
        "format": "Get Started:",
        "layout": "row-left",
        "className": "",
        "x": 370,
        "y": 40,
        "wires": []
    },
    {
        "id": "daf4a39d6a0a6cf4",
        "type": "modbus-read",
        "z": "6ad5b9fd60cc0a30",
        "name": "modbus-client-read-holding-regs",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "modbus-sim",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "16",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": true,
        "startDelayTime": "5",
        "server": "7e05ac45fab33178",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 270,
        "y": 140,
        "wires": [
            [
                "310da4d40d867481",
                "29372c6f0912a929"
            ],
            []
        ]
    },
    {
        "id": "310da4d40d867481",
        "type": "debug",
        "z": "6ad5b9fd60cc0a30",
        "name": "Holding regs",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 40,
        "wires": []
    },
    {
        "id": "f3d7af4de28eccd6",
        "type": "modbus-read",
        "z": "6ad5b9fd60cc0a30",
        "name": "modbus-client-read-coils",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "modbus-sim",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "16",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": true,
        "startDelayTime": "5",
        "server": "7e05ac45fab33178",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "6d8d08b22ba496cb",
                "8f33c29467c98d7d"
            ],
            []
        ]
    },
    {
        "id": "6d8d08b22ba496cb",
        "type": "debug",
        "z": "6ad5b9fd60cc0a30",
        "name": "Coils",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "dc8c78704d353891",
        "type": "modbus-read",
        "z": "6ad5b9fd60cc0a30",
        "name": "modbus-client-read-input-regs",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "modbus-sim",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "16",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": true,
        "startDelayTime": "5",
        "server": "7e05ac45fab33178",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 260,
        "y": 260,
        "wires": [
            [
                "10658f0fd59605bf",
                "16f4953cb4086f81"
            ],
            []
        ]
    },
    {
        "id": "10658f0fd59605bf",
        "type": "debug",
        "z": "6ad5b9fd60cc0a30",
        "name": "Input registers",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 260,
        "wires": []
    },
    {
        "id": "526f61f0b8f17f55",
        "type": "modbus-read",
        "z": "6ad5b9fd60cc0a30",
        "name": "modbus-client-read-discrete-inputs",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "modbus-sim",
        "dataType": "Input",
        "adr": "0",
        "quantity": "16",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": true,
        "startDelayTime": "5",
        "server": "7e05ac45fab33178",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 280,
        "y": 320,
        "wires": [
            [
                "924254433ee9ef24",
                "6708868bc82d672e"
            ],
            []
        ]
    },
    {
        "id": "924254433ee9ef24",
        "type": "debug",
        "z": "6ad5b9fd60cc0a30",
        "name": "Discrete inputs",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 340,
        "wires": []
    },
    {
        "id": "85b8f1e61332dbd4",
        "type": "Stackhero-InfluxDB-v2-write",
        "z": "6ad5b9fd60cc0a30",
        "server": "d580ed5a6fa4fd05",
        "name": "InfluxDB WRITE",
        "x": 1160,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "29372c6f0912a929",
        "type": "function",
        "z": "6ad5b9fd60cc0a30",
        "name": "prepare holding reg data",
        "func": "\nmsg.payload = {\n    // You bucket\n    // Optional (it can be defined in the node credentials settings)\n    //bucket: 'myBucket',\n\n    // Precision of timestamp\n    // Optional\n    // Can be `ns` (nanoseconds),\n    //        `us` (microseconds),\n    //        `ms` (milliseconds),\n    //        `s` (seconds).\n    // The default is `ns`\n    // Note: if you set the `timestamp` field to `Date.now()`, you have to set the `precision` to `ms`\n    precision: 'ms',\n\n    // Data to send to InfluxDB\n    // Can be an array of objects or only one object\n    data: [\n        {\n            measurement: 'modbus-holding-registers',\n\n            tags: {\n                deviceId: 'modbus-sim-1',\n                dataType: 'holding-',\n                location: 'kod'\n            },\n\n            fields: {\n                0: msg.payload[0],\n                1: msg.payload[1],\n                2: msg.payload[2],\n                3: msg.payload[3],\n                4: msg.payload[4],\n                5: msg.payload[5],\n                6: msg.payload[6],\n                7: msg.payload[7],\n                8: msg.payload[8],\n                9: msg.payload[9],\n                10: msg.payload[10],\n                11: msg.payload[11],\n                12: msg.payload[12],\n                13: msg.payload[13],\n                14: msg.payload[14],\n                15: msg.payload[15]\n            },\n\n            timestamp: Date.now()\n        },\n\n        // More data can be send here, simply re add an object\n        // { ... },\n    ]\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 40,
        "wires": [
            [
                "85b8f1e61332dbd4"
            ]
        ]
    },
    {
        "id": "8f33c29467c98d7d",
        "type": "function",
        "z": "6ad5b9fd60cc0a30",
        "name": "prepare coil data",
        "func": "\nmsg.payload = {\n    // You bucket\n    // Optional (it can be defined in the node credentials settings)\n    //bucket: 'myBucket',\n\n    // Precision of timestamp\n    // Optional\n    // Can be `ns` (nanoseconds),\n    //        `us` (microseconds),\n    //        `ms` (milliseconds),\n    //        `s` (seconds).\n    // The default is `ns`\n    // Note: if you set the `timestamp` field to `Date.now()`, you have to set the `precision` to `ms`\n    precision: 'ms',\n\n    // Data to send to InfluxDB\n    // Can be an array of objects or only one object\n    data: [\n        {\n            measurement: 'modbus-coils',\n\n            tags: {\n                deviceId: 'modbus-sim-1',\n                dataType: 'coil',\n                location: 'kod'\n            },\n\n            fields: {\n                coil0: msg.payload[0],\n                coil1: msg.payload[1],\n                coil2: msg.payload[2],\n                coil3: msg.payload[3],\n                coil4: msg.payload[4],\n                coil5: msg.payload[5],\n                coil6: msg.payload[6],\n                coil7: msg.payload[7],\n                coil8: msg.payload[8],\n                coil9: msg.payload[9],\n                coil10: msg.payload[10],\n                coil11: msg.payload[11],\n                coil12: msg.payload[12],\n                coil13: msg.payload[13],\n                coil14: msg.payload[14],\n                coil15: msg.payload[15],\n            },\n\n            timestamp: Date.now()\n        },\n\n        // More data can be send here, simply re add an object\n        // { ... },\n    ]\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 120,
        "wires": [
            [
                "e07894451887f479"
            ]
        ]
    },
    {
        "id": "e07894451887f479",
        "type": "Stackhero-InfluxDB-v2-write",
        "z": "6ad5b9fd60cc0a30",
        "server": "d580ed5a6fa4fd05",
        "name": "InfluxDB WRITE",
        "x": 1160,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "16f4953cb4086f81",
        "type": "function",
        "z": "6ad5b9fd60cc0a30",
        "name": "prepare input-reg data",
        "func": "\nmsg.payload = {\n    // You bucket\n    // Optional (it can be defined in the node credentials settings)\n    //bucket: 'myBucket',\n\n    // Precision of timestamp\n    // Optional\n    // Can be `ns` (nanoseconds),\n    //        `us` (microseconds),\n    //        `ms` (milliseconds),\n    //        `s` (seconds).\n    // The default is `ns`\n    // Note: if you set the `timestamp` field to `Date.now()`, you have to set the `precision` to `ms`\n    precision: 'ms',\n\n    // Data to send to InfluxDB\n    // Can be an array of objects or only one object\n    data: [\n        {\n            measurement: 'modbus-input-registers',\n\n            tags: {\n                deviceId: 'modbus-sim-1',\n                dataType: 'input-register',\n                location: 'kod'\n            },\n\n            fields: {\n                0: msg.payload[0],\n                1: msg.payload[1],\n                2: msg.payload[2],\n                3: msg.payload[3],\n                4: msg.payload[4],\n                5: msg.payload[5],\n                6: msg.payload[6],\n                7: msg.payload[7],\n                8: msg.payload[8],\n                9: msg.payload[9],\n                10: msg.payload[10],\n                11: msg.payload[11],\n                12: msg.payload[12],\n                13: msg.payload[13],\n                14: msg.payload[14],\n                15: msg.payload[15],\n            },\n\n            timestamp: Date.now()\n        },\n\n        // More data can be send here, simply re add an object\n        // { ... },\n    ]\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 200,
        "wires": [
            [
                "f582568bd86f1bcf"
            ]
        ]
    },
    {
        "id": "f582568bd86f1bcf",
        "type": "Stackhero-InfluxDB-v2-write",
        "z": "6ad5b9fd60cc0a30",
        "server": "d580ed5a6fa4fd05",
        "name": "InfluxDB WRITE",
        "x": 1160,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6708868bc82d672e",
        "type": "function",
        "z": "6ad5b9fd60cc0a30",
        "name": "prepare discrete-input data",
        "func": "\nmsg.payload = {\n    // You bucket\n    // Optional (it can be defined in the node credentials settings)\n    //bucket: 'myBucket',\n\n    // Precision of timestamp\n    // Optional\n    // Can be `ns` (nanoseconds),\n    //        `us` (microseconds),\n    //        `ms` (milliseconds),\n    //        `s` (seconds).\n    // The default is `ns`\n    // Note: if you set the `timestamp` field to `Date.now()`, you have to set the `precision` to `ms`\n    precision: 'ms',\n\n    // Data to send to InfluxDB\n    // Can be an array of objects or only one object\n    data: [\n        {\n            measurement: 'modbus-discrete-inputs',\n\n            tags: {\n                deviceId: 'modbus-sim-1',\n                dataType: 'discrete-input',\n                location: 'kod'\n            },\n\n            fields: {\n                0: msg.payload[0],\n                1: msg.payload[1],\n                2: msg.payload[2],\n                3: msg.payload[3],\n                4: msg.payload[4],\n                5: msg.payload[5],\n                6: msg.payload[6],\n                7: msg.payload[7],\n                8: msg.payload[8],\n                9: msg.payload[9],\n                10: msg.payload[10],\n                11: msg.payload[11],\n                12: msg.payload[12],\n                13: msg.payload[13],\n                14: msg.payload[14],\n                15: msg.payload[15],\n            },\n\n            timestamp: Date.now()\n        },\n\n        // More data can be send here, simply re add an object\n        // { ... },\n    ]\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 280,
        "wires": [
            [
                "7ea9bf5b506e4aa5"
            ]
        ]
    },
    {
        "id": "7ea9bf5b506e4aa5",
        "type": "Stackhero-InfluxDB-v2-write",
        "z": "6ad5b9fd60cc0a30",
        "server": "d580ed5a6fa4fd05",
        "name": "InfluxDB WRITE",
        "x": 1160,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5d3cf572bfff4da7",
        "type": "function",
        "z": "c447761f81aaafa4",
        "name": "SetTimeRange",
        "func": "var p_30d  = 1000*60*60*24*30 ; //30 Days\nvar p_7d  = 1000*60*60*24*7 ; //7 Days\nvar p_1d   =  1000*60*60*24 ; // 1 Day\nvar p_hr = 1000*60*60; //1 Hour\n\nvar d = new Date();\nvar current = d.getTime();\n\n\nmsg.fromdate = \"now-\" + msg.payload;\nmsg.enddate = \"now\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 160,
        "wires": [
            [
                "eacb2b9e04cc6215"
            ]
        ]
    },
    {
        "id": "a8b54af9dcc696f2",
        "type": "ui_template",
        "z": "c447761f81aaafa4",
        "group": "2a7b81d0073f7e56",
        "name": "Page Got Loaded",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function() {\n    (function(scope) {\n        scope.send({payload: \"preload\"}); // this gets sent when the view is opened in the browser\n    })(scope);\n})();\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "812c49dfe0836e3c"
            ]
        ]
    },
    {
        "id": "9b4d9f58121d558b",
        "type": "ui_template",
        "z": "c447761f81aaafa4",
        "group": "2a7b81d0073f7e56",
        "name": "Plot Grafana",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n<iframe id=\"myFrame\" width=\"1000px\" height=\"600px\" style = \"overflow:hidden; margin:auto; border:0px solid green;\"></iframe>\n\n<script>\n//NOTE, more then one chart on a page, rename in the second and following \n//templates the \"myframe\" variable so that every template has a unique name.\n(function(scope) {\n    // watch msg object from Node-RED\n    scope.$watch('msg', function(msg) {\n        // new message received\n        var x = document.getElementById('myFrame');\n        x.setAttribute('src', msg.payload); \n        });\n})(scope);\n</script>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "eacb2b9e04cc6215",
        "type": "function",
        "z": "c447761f81aaafa4",
        "name": "BuildTemplate",
        "func": "//NOTE, more then one chart on a page, rename in the second and following \n//templates the \"myframe\" variable so that every template has a unique name.\n\nvar panelId=global.get(\"regSel\")\n\nmsg.payload = \"http://localhost:3000/d-solo/H3iLFJM4k/modbus-data?orgId=1\"+\n    \"&refresh=100ms\" +\n    \"&theme=light\" +\n    \"&from=\" + msg.fromdate +\n    \"&to=\" + msg.enddate +\n    \"&panelId=\" + panelId\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 160,
        "wires": [
            [
                "9b4d9f58121d558b",
                "da89bc031a15b3f3"
            ]
        ]
    },
    {
        "id": "da89bc031a15b3f3",
        "type": "debug",
        "z": "c447761f81aaafa4",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 240,
        "wires": []
    },
    {
        "id": "2dc037028b0acf9f",
        "type": "ui_dropdown",
        "z": "c447761f81aaafa4",
        "name": "",
        "label": "Select Data Type",
        "tooltip": "",
        "place": "Choose data to display...",
        "group": "579a5e58c9ab45fc",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Current",
                "value": 1,
                "type": "num"
            },
            {
                "label": "Voltage",
                "value": 2,
                "type": "num"
            },
            {
                "label": "3",
                "value": "3",
                "type": "str"
            },
            {
                "label": "4",
                "value": "4",
                "type": "str"
            },
            {
                "label": "5",
                "value": "5",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "payload",
        "topicType": "msg",
        "className": "",
        "x": 230,
        "y": 360,
        "wires": [
            [
                "4b88c37ead1337bf",
                "6b45e04b199bc22c"
            ]
        ]
    },
    {
        "id": "9fd2d8d04c6ecb94",
        "type": "debug",
        "z": "c447761f81aaafa4",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 480,
        "wires": []
    },
    {
        "id": "922af606225abba3",
        "type": "debug",
        "z": "c447761f81aaafa4",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "flow.get(regSel)",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 640,
        "wires": []
    },
    {
        "id": "812c49dfe0836e3c",
        "type": "function",
        "z": "c447761f81aaafa4",
        "name": "function 3",
        "func": "var regSel;\nglobal.set(\"regSel\", 1);\nmsg.payload=1\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 280,
        "wires": [
            [
                "2dc037028b0acf9f"
            ]
        ]
    },
    {
        "id": "4b88c37ead1337bf",
        "type": "function",
        "z": "c447761f81aaafa4",
        "name": "function 4",
        "func": "global.set(\"regSel\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "eacb2b9e04cc6215"
            ]
        ]
    },
    {
        "id": "ebe565afe5970103",
        "type": "inject",
        "z": "c447761f81aaafa4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 640,
        "wires": [
            [
                "922af606225abba3"
            ]
        ]
    },
    {
        "id": "e2e1ea2acbdc9e28",
        "type": "ui_button",
        "z": "c447761f81aaafa4",
        "name": "",
        "group": "2a7b81d0073f7e56",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "1 H",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1h",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "5d3cf572bfff4da7"
            ]
        ]
    },
    {
        "id": "9b2d6fa6ced692f9",
        "type": "ui_button",
        "z": "c447761f81aaafa4",
        "name": "",
        "group": "2a7b81d0073f7e56",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "10 Min",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "10m",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "5d3cf572bfff4da7"
            ]
        ]
    },
    {
        "id": "6b45e04b199bc22c",
        "type": "ui_button",
        "z": "c447761f81aaafa4",
        "name": "",
        "group": "2a7b81d0073f7e56",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "1 min",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1m",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 240,
        "wires": [
            [
                "5d3cf572bfff4da7"
            ]
        ]
    },
    {
        "id": "7a6b3511db12f3e1",
        "type": "ui_button",
        "z": "c447761f81aaafa4",
        "name": "",
        "group": "2a7b81d0073f7e56",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "12 H",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "12h",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 200,
        "wires": [
            [
                "5d3cf572bfff4da7"
            ]
        ]
    },
    {
        "id": "6a4b85d5a541341f",
        "type": "ui_button",
        "z": "c447761f81aaafa4",
        "name": "",
        "group": "2a7b81d0073f7e56",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "24 H",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "24h",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "5d3cf572bfff4da7"
            ]
        ]
    },
    {
        "id": "0345c4f71e25d675",
        "type": "modbus-read",
        "z": "c447761f81aaafa4",
        "name": "modbus-holding regs-current",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": true,
        "unitid": "http://localhost:1880/#modbus-options-tab",
        "dataType": "HoldingRegister",
        "adr": "1",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "5",
        "server": "7e05ac45fab33178",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "x": 800,
        "y": 440,
        "wires": [
            [
                "15a10c7fc9d37d71",
                "0388aff2f54dd8e0"
            ],
            [
                "749be5f3490f4097"
            ]
        ]
    },
    {
        "id": "749be5f3490f4097",
        "type": "debug",
        "z": "c447761f81aaafa4",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 380,
        "wires": []
    },
    {
        "id": "bf62c8451349c5a4",
        "type": "ui_text",
        "z": "c447761f81aaafa4",
        "group": "579a5e58c9ab45fc",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current [A]:",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 1310,
        "y": 440,
        "wires": []
    },
    {
        "id": "15a10c7fc9d37d71",
        "type": "debug",
        "z": "c447761f81aaafa4",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 340,
        "wires": []
    },
    {
        "id": "0388aff2f54dd8e0",
        "type": "function",
        "z": "c447761f81aaafa4",
        "name": "function 1",
        "func": "msg.payload=msg.payload/1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 440,
        "wires": [
            [
                "bf62c8451349c5a4"
            ]
        ]
    },
    {
        "id": "957411ccae5ecbe3",
        "type": "modbus-read",
        "z": "c447761f81aaafa4",
        "name": "modbus-holding regs-voltage",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": true,
        "unitid": "http://localhost:1880/#modbus-options-tab",
        "dataType": "HoldingRegister",
        "adr": "0x00",
        "quantity": "1",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "5",
        "server": "7e05ac45fab33178",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "x": 840,
        "y": 600,
        "wires": [
            [
                "6cd3311c171a0159",
                "81a4ba66d1ff939c"
            ],
            [
                "c46ac87e79d88b0f"
            ]
        ]
    },
    {
        "id": "c46ac87e79d88b0f",
        "type": "debug",
        "z": "c447761f81aaafa4",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 540,
        "wires": []
    },
    {
        "id": "459037e978df3816",
        "type": "ui_text",
        "z": "c447761f81aaafa4",
        "group": "579a5e58c9ab45fc",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Voltage [V]:",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 1270,
        "y": 580,
        "wires": []
    },
    {
        "id": "6cd3311c171a0159",
        "type": "debug",
        "z": "c447761f81aaafa4",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 500,
        "wires": []
    },
    {
        "id": "81a4ba66d1ff939c",
        "type": "function",
        "z": "c447761f81aaafa4",
        "name": "function 2",
        "func": "msg.payload=msg.payload/1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1075,
        "y": 593,
        "wires": [
            [
                "459037e978df3816"
            ]
        ]
    },
    {
        "id": "f9000c2593203279",
        "type": "ui_switch",
        "z": "456e81617a2b6cd0",
        "name": "",
        "label": "Coil 0",
        "tooltip": "",
        "group": "06600b2f320e273d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "421ce07747783644"
            ]
        ]
    },
    {
        "id": "76958490c2aa0f4f",
        "type": "modbus-write",
        "z": "456e81617a2b6cd0",
        "name": "write coil 1",
        "showStatusActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "0x01",
        "quantity": "1",
        "server": "7e05ac45fab33178",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 330,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d01d10c5d069c9d5",
        "type": "ui_switch",
        "z": "456e81617a2b6cd0",
        "name": "",
        "label": "Coil 1",
        "tooltip": "",
        "group": "06600b2f320e273d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "76958490c2aa0f4f"
            ]
        ]
    },
    {
        "id": "fe3fd102936d3c48",
        "type": "ui_switch",
        "z": "456e81617a2b6cd0",
        "name": "",
        "label": "Coil 2",
        "tooltip": "",
        "group": "06600b2f320e273d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "5a83acc16952bbf7"
            ]
        ]
    },
    {
        "id": "14c8a984854692fd",
        "type": "ui_switch",
        "z": "456e81617a2b6cd0",
        "name": "",
        "label": "Coil 3",
        "tooltip": "",
        "group": "06600b2f320e273d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "c4d36658683d0427"
            ]
        ]
    },
    {
        "id": "1c1d8e1305900b3d",
        "type": "ui_switch",
        "z": "456e81617a2b6cd0",
        "name": "",
        "label": "Coil 4",
        "tooltip": "",
        "group": "06600b2f320e273d",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "48f3b04f47e49f60"
            ]
        ]
    },
    {
        "id": "153dc8f2b1b8753b",
        "type": "ui_switch",
        "z": "456e81617a2b6cd0",
        "name": "",
        "label": "Coil 5",
        "tooltip": "",
        "group": "06600b2f320e273d",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "cd3a876d41863a39"
            ]
        ]
    },
    {
        "id": "fbf8e73183264720",
        "type": "ui_switch",
        "z": "456e81617a2b6cd0",
        "name": "",
        "label": "Coil 6",
        "tooltip": "",
        "group": "06600b2f320e273d",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "85c9268a21732cf2"
            ]
        ]
    },
    {
        "id": "276a3a074d43fcb3",
        "type": "ui_switch",
        "z": "456e81617a2b6cd0",
        "name": "",
        "label": "Coil 7",
        "tooltip": "",
        "group": "06600b2f320e273d",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "6486215d6ab82bdf"
            ]
        ]
    },
    {
        "id": "5a83acc16952bbf7",
        "type": "modbus-write",
        "z": "456e81617a2b6cd0",
        "name": "write coil 2",
        "showStatusActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "0x02",
        "quantity": "1",
        "server": "7e05ac45fab33178",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 330,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c4d36658683d0427",
        "type": "modbus-write",
        "z": "456e81617a2b6cd0",
        "name": "write coil 3",
        "showStatusActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "0x03",
        "quantity": "1",
        "server": "7e05ac45fab33178",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 330,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "48f3b04f47e49f60",
        "type": "modbus-write",
        "z": "456e81617a2b6cd0",
        "name": "write coil 4",
        "showStatusActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "0x04",
        "quantity": "1",
        "server": "7e05ac45fab33178",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 330,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "cd3a876d41863a39",
        "type": "modbus-write",
        "z": "456e81617a2b6cd0",
        "name": "write coil 5",
        "showStatusActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "0x05",
        "quantity": "1",
        "server": "7e05ac45fab33178",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 330,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "85c9268a21732cf2",
        "type": "modbus-write",
        "z": "456e81617a2b6cd0",
        "name": "write coil 6",
        "showStatusActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "0x06",
        "quantity": "1",
        "server": "7e05ac45fab33178",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 330,
        "y": 400,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6486215d6ab82bdf",
        "type": "modbus-write",
        "z": "456e81617a2b6cd0",
        "name": "write coil 7",
        "showStatusActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "0x07",
        "quantity": "1",
        "server": "7e05ac45fab33178",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 330,
        "y": 460,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "421ce07747783644",
        "type": "modbus-write",
        "z": "456e81617a2b6cd0",
        "name": "write coil 0",
        "showStatusActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "Coil",
        "adr": "0x00",
        "quantity": "1",
        "server": "7e05ac45fab33178",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 330,
        "y": 40,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ba31183c9549cb95",
        "type": "modbus-read",
        "z": "456e81617a2b6cd0",
        "name": "modbus-read-coil-1",
        "topic": "",
        "showStatusActivities": true,
        "logIOActivities": false,
        "showErrors": true,
        "unitid": "http://localhost:1880/#modbus-options-tab",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "8",
        "rate": "100",
        "rateUnit": "ms",
        "delayOnStart": false,
        "startDelayTime": "5",
        "server": "7e05ac45fab33178",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": true,
        "x": 590,
        "y": 40,
        "wires": [
            [
                "5ad934c61c41d563",
                "500232bffed99cd6"
            ],
            [
                "378c936ede01d57b"
            ]
        ]
    },
    {
        "id": "5ad934c61c41d563",
        "type": "ui_text",
        "z": "456e81617a2b6cd0",
        "group": "06600b2f320e273d",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Coils",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 770,
        "y": 40,
        "wires": []
    },
    {
        "id": "500232bffed99cd6",
        "type": "debug",
        "z": "456e81617a2b6cd0",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 140,
        "wires": []
    },
    {
        "id": "378c936ede01d57b",
        "type": "debug",
        "z": "456e81617a2b6cd0",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 180,
        "wires": []
    }
]